Id,Name,Shape Library,Page ID,Contained By,Group,Line Source,Line Destination,Source Arrow,Destination Arrow,Status,Text Area 1,Text Area 2,Text Area 3,Comments
1,Document,,,,,,,,,Draft,UML Diagram - IS23AM15,,,
2,Page,,,,,,,,,,Initial Model,,,
3,Class,UML,2,,,,,,,,Game,"​- winner : Optional<Player>
- isFirstGame: boolean","​+ Game(numPlayers : int, isFirstGame boolean)
+ Game(savedGame : Game)
+ addPlayer(nickname : String) : Boolen
+ startGame() : void
+ nextTurn() : Boolean
+ pickTiles(tiles : List<Tile>) : Boolean
+ putTiles(tiles : List<Tile>, col : int) : Boolean
+ nextTurnAction() : TurnState
+ getWinner() : Optional<String>
+ calulatePoints()
+ getGameState() : GameState
+ nextGameState() : void
+ sendMessageToAll(message: Message)
+ sendMessageToPlayer(message: Message)
+ getPlayerMessages(nickname : String)
+ getCurrentBookShelf() : BookShelf 
+ getCurrentLivingRoom() : LivingRoomBoard
- shouldRefillBoard() : Boolean","[{""Resolved"":false,""Comments"":[{""Timestamp"":""2023-03-10T19:12:06.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""nextTurn() : ritorna true se il gioco è finito e non si va avanti""},{""Timestamp"":""2023-03-10T19:51:31.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""nextTurnAction() : passa alla prossima fase del turno e ritorna il TurnState che ne consegue""}]}]"
4,Text,Standard,2,,63,,,,,,Initial UML Diagram - IS23AM15,,,
5,Text,Standard,2,,63,,,,,,"Luca Rossi, Marco Allanda, Giuseppe Bocci, Pietro Ammaturo  |  March 15, 2023",,,
6,Class,UML,2,,,,,,,,Player,"​- nickname : String
- fullBookShelf : boolean
- isPlaying : boolean = true
- points : Integer = 0
- firstToFinish : Boolean = false","​+ Player(nickname : String)
+ hasFinished() : boolean
+ getName() : String
+ isPlaying() : boolean
+ addPoints(points : Integer)
+ goToWC()
+ backFromWC()
+ putTiles(tiles : List<Tile>, column : int) : Boolean
+ getPoints() : Integer
+ getMaxColumnSpace() : int","[{""Resolved"":false,""Comments"":[{""Timestamp"":""2023-03-10T19:02:48.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""goToWC: set isPlaying = false\nbackFromWC(): lo mette a true""}]}]"
7,Class,UML,2,,,,,,,,Card,​- function : IntToFunction,"​+ Card(function)
+ getFunction() ",
8,Class,UML,2,,,,,,,,BookShelf,"​- NUM_COLUMNS : Integer = 6
- NUM_ROWS : Integer = 5
- currentTiles : List<List<Tile>>","​+ BookShelf()
- insertTile(tile : Tile, column : int) : Boolean
+ insertTiles(tiles : List<Tile>, column : int) : Boolean
+ getTiles() :  List<List<Tile>>
+ clearBookShelf() : void
+ getMaxColumnSpace() : int","[{""Resolved"":false,""Comments"":[{""Timestamp"":""2023-03-10T18:49:28.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""getTiles: ritorna una copia di currentTiles non un riferimento""}]}]"
9,Class,UML,2,,,,,,,,PersonalGoalCard,​- pointsToRights : Integer[6][2],"​+ PersonalGoalCard(function: PersonalGoalFunction)
+ getFunction()",
10,Class,UML,2,,,,,,,,CommonGoalCard,,"​+ CommonGoalCard(function: CommonGoalFunction)
+ getFunction() : ToIntFunction",
11,Class,UML,2,,,,,,,,"<<enumeration>>
GameState","​+ INIT
+ PLAYING
+ GAME_OVER",,
12,Class,UML,2,,,,,,,,"<<enumeration>>
TileType","​+ CAT
+ BOOK
+ GAME
+ FRAME
+ TROPHIE
+ PLANT",,
13,Class,UML,2,,,,,,,,LivingRoomBoard,"​- numOfPlayer : Integer
- DIM : Integer = 9
- board : List<List<Tile>>
- mask : List<List<TileRule>>
- bag : Map<TileType, int>","​+ LivingRoomBoard(numberOfPlayers : Integer)
+ isToFill() : Boolean
+ fillBoard() : void
+ pickTiles(tiles : List<Tile>) : Boolean
+ checkPick(tiles : List<Tile>) : Boolean","[{""Resolved"":false,""Comments"":[{""Timestamp"":""2023-03-13T12:25:32.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""bag: tipoTile, tilesRimanti""}]}]"
14,Class,UML,2,,,,,,,,Turn,​- pickedTiles: List<Tile>,"​+ Turn(player: Player, board : LivingRoomBoard)
+ pickTiles(tiles : List<Tile>) : Boolean
+ putTiles(tiles : List<Tile>, column : int) : Boolean
+ nextState() : void
+ getTurnState() : TurnState
+ setTurnState() : void
+ checkBoardRefill() : Boolean
- checkPick(tiles : List<Tile>) : Boolean",
15,Class,UML,2,,,,,,,,"<<enumeration>>
TileRule","​+ BLOCK
+ TWO
+ THREE
+ FOUR",,
16,Class,UML,2,,,,,,,,"<<enumeration>>
TurnState","​+ PICK_TILES
+ PUT_TILES
+ END",,
17,Class,UML,2,,,,,,,,Deck,,"​+ Deck(Enum)
+ getCards() : List<Card>
+ Draw() : Card",
18,Class,UML,2,,,,,,,,CommonGoalCardManager,"​- unfullfilledCards : Map<Player, List<lCard>>
- cardToTokens  : Map< Card, List<Token> >
- playersToTokens  : Map< Player, List<Token> >","​+ CommonCardManager(players:List<Player>, deck:Deck)
+ update()
+ updatePoints()","[{""Resolved"":false,""Comments"":[{""Timestamp"":""2023-03-10T19:55:19.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""updatePoints() usa player.addPoint e rimuove token dalla pila""}]}]"
19,Text,Standard,2,,,,,,,,,,,
20,Class,UML,2,,,,,,,,CardsAndPointsManager,,"​+ CardsAndPointsManager(players : List<Player>, deck : Deck)",
21,Class,UML,2,,,,,,,,Token,"​- points : Integer
- number : Integer","​+ Token(points : integer, number : Integer)
+ getPoints() : Integer",
22,Class,UML,2,,,,,,,,"<<enumeration>>
CommonGoalFunction","​+ 6_ADJACENT_2
+ 4_ADJACENT_4
+ CORNERS
+ 2_SQUARE_2
+ 3_DIFFERENT_COLUMNS
+ 8_SAME
+ DIAGONAL
+ 4_DIFFERENT_LINES
+ 2_CLOURFUL_COLUMN
+ 2_CLOURFUL_LINES
+ X
+ STAIRS","​- CommonGoalFunction(function)
",
23,Class,UML,2,,,,,,,,Chat,"​- MessagesPerPlayer : Map<Player, List<Message>>","​+ Chat(players: List<Player>)
+ Chat(chat Chat)
+ sendMessageToAll(message: Message)
+ sendMessageToPlayer(message: Message)
+ getMessages(player: Player) : List<Message>",
24,Class,UML,2,,,,,,,, PersonalGoalCardManager,"​- playersToCards  : Map< Player, Card >","​+ PersonalCardManager(players:List<Player>,  deck:Deck )
+ updatePoints()",
25,Class,UML,2,,,,,,,, AdjacentItemTilesManager,​- pointsToNumberOfAjacent : Integer[4][4],"​+  AdiacentItemTilesManager(players:List<Player>)
+ updatePoints()",
26,Class,UML,2,,,,,,,,Message,"​+ receiver : Optional <Player>
+ data : LocalDateTime","​+ Message(Txt : String)
+ Message(Txt : String, receiver : Player)","[{""Resolved"":false,""Comments"":[{""Timestamp"":""2023-03-13T22:33:46.000Z"",""Creator"":""Giuseppe Bocci"",""Content"":""dato che reciver è un optional toglierei proprio isPrivate, altrimenti non ha senso usare l'optional""}]}]"
27,Class,UML,2,,,,,,,,PointsManager,,​+ updatePoints(),
28,Class,UML,2,,,,,,,,"<<enumeration>>
PersonalGoalFunction","​+ PERSONAL_1
...
+ PERSONAL_12",​- PersonalGoalFunction(function),
29,Class,UML,2,,,,,,,,"<<enumeration>>
EnumGoalFunction",​- function : IntToFunction,"​- EnumGoalFunction(function)
+ getFunction() : ToIntFunction",
30,Class,UML,2,,,,,,,,Tile,"​+ boardX : Integer
+ boardY : Integer","​+ Tile(boardX : Integer, boardY : Integer)
+ getBoardX() : Integer
+ getBoardY() : Integer
+ removeFromBoard() : void
+ getType() : ItemTile",
31,Line,,2,,63,4,4,None,None,,,,,
32,Line,,2,,,3,6,None,None,,2 - 4,​- players : List<Player>,,
33,Line,,2,,,6,8,None,None,,​- bookShelf,,,
34,Line,,2,,,3,13,None,None,,​- board: LivingRoomBoard,,,
35,Line,,2,,,14,3,None,Composition,,​- currentTurn : Turn,,,
36,Line,,2,,,8,30,None,None,,30,,,
37,Line,,2,,,14,6,None,None,,​- currPlayer,,,
38,Line,,2,,,14,30,None,None,,1-3,​- pickedTiles : List<Tile>,,
39,Line,,2,,,30,13,None,None,,87,,,
40,Line,,2,,,16,14,None,None,,​- turnState ,,,
41,Line,,2,,,10,7,None,Generalization,,,,,
42,Line,,2,,,9,7,None,Generalization,,,,,
43,Line,,2,,,15,13,None,None,,81,,,
44,Line,,2,,,3,17,None,None,,2,"​- deckPersonalGoalCards
- deckCommonGoalCards",,
45,Line,,2,,,7,17,None,Composition,,2...*, - cards : List<Card>,,
46,Line,,2,,,9,28,None,None,,,,,
47,Line,,2,,,20,27,None,Generalization,,,,,
48,Line,,2,,,18,20,None,Generalization,,,,,
49,Line,,2,,,20,17,None,None,,​- deck : Deck,,,
50,Line,,2,,,3,27,None,None,,​- pointsManagers : List<PointsManager>,3,,
51,Line,,2,,,10,22,None,None,,,,,
52,Line,,2,,,24,20,None,Generalization,,,,,
53,Line,,2,,,25,27,None,Generalization,,,,,
54,Line,,2,,,3,11,None,None,,​- gameState ,,,
55,Line,,2,,,18,21,None,None,,2-8,,,
56,Line,,2,,,23,26,None,None,,0..*,,,
57,Line,,2,,,3,23,None,None,,​- Chat,,,
58,Line,,2,,,28,29,None,Generalization,,,,,
59,Line,,2,,,22,29,None,Generalization,,,,,
60,Line,,2,,,14,13,None,None,,​- board: LivingRoomBoard,,,
61,Line,,2,,,27,6,None,None,,2 - 4,​- players : List<Player>,,
62,Line,,2,,,12,30,None,None,,​+ type : TileType,,,
63,Group 1,,2,,,,,,,,,,,